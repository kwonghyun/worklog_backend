plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.asciidoctor.jvm.convert" version "3.3.2" // restdocs
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt // restdocs
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.hibernate:hibernate-community-dialects:6.3.0.CR1' // dialect
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // Querydsl
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta" // Querydsl
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // Querydsl
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // Querydsl
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0' // p6spy 쿼리 로깅

    implementation 'com.mysql:mysql-connector-j:8.1.0' // mysql
    implementation 'org.springframework.boot:spring-boot-starter-data-redis' // redis

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // jwt
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // jwt
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // jwt

    implementation 'org.quartz-scheduler:quartz:2.5.0-rc1' // quartz scheduler

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // restdocs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // restdocs
}

ext {
    snippetsDir = file('build/generated-snippets') // restdocs
}
tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir // restdocs
}
asciidoctor { // restdocs
    configurations 'asciidoctorExt'
    baseDirFollowsSourceFile()
    inputs.dir snippetsDir
    dependsOn test
}
asciidoctor.doFirst { // restdocs
    delete file('src/main/resources/static/docs')
}
task copyDocument(type: Copy) { // restdocs
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}
build {
    dependsOn copyDocument // restdocs
}

clean {
    delete file('src/main/generated') // querydsl
}